doctest for the matrix_divided function:

import the function:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test the normal condition:

>>> matrix_divided([[-4, 6], [9.9, 3]], 3)
[[-1.33, 2.0], [3.3, 1.0]]


test the Exception raises:

>>> matrix_divided([1, 4, 5], 4)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 4, 5], ["1", 4, 5]], 4)
Traceback (most recent call last):                                                                 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[True, 4, 5], [1, 4, 5]], 4)
Traceback (most recent call last):                                                                 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, 4, 5], [1, 4, 5], False], 4)
Traceback (most recent call last):                                                                 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 5, 3], [3, 5]], 8)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 6], [9, 34], [4, 9]], "string")
Traceback (most recent call last):
	...
TypeError: div must be a number

>>> matrix_divided([[3, 6], [9, 34], [4, 9]], 0)
Traceback (most recent call last):
        ...
ZeroDivisionError: division by zero
